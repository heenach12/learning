# Definition for a binary tree node.
from typing import Optional, List


class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right


class Solution:
    def findMode(self, root: Optional[TreeNode]) -> List[int]:
        modes = {}

        def dfs(node):
            if not node: return node

            modes[node.val] = modes.get(node.val, 0) + 1

            dfs(node.left)
            dfs(node.right)

        dfs(root)

        result = []
        max_value = max(modes.values())
        for k, v in modes.items():
            if v == max_value:
                result.append(k)
        return result


root = [1,None,2,2]

a = Solution()
a.findMode(root)
